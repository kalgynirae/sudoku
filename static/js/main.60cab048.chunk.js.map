{"version":3,"sources":["Geometry.js","Realtime.ts","Gamestate.js","Board.js","Selection.js","Theme.js","Buttons.js","Loader.js","Settings.js","App.js","index.js"],"names":["indexbox","ibox","isquare","boxcol","Math","floor","row","n","immutable","col","rowOf","s","colOf","boxOf","boxrow","flatMap","affectedBy","union","BoardPencilType","localBoardSquareDefaultValues","number","corners","Immutable","centers","locked","createLocalBoardSquare","LocalBoardState","squares","this","diffs","createMemo","reduce","d","boardSquares","diffSquareIdx","update","boardSquare","square","operation","fn","set","digit","Error","applyDiffOperationToSquare","withNumbers","numbers","map","toList","BaseGameState","boardStateListeners","boardState","listener","push","filter","l","RemoteGameState","ws","serverBoardState","clientBoardState","empty","unconfirmedDiffGroups","lastSentSyncId","lastReceivedSyncId","onMessage","rawMessage","onResponseMessage","JSON","parse","data","onmessage","Promise","resolve","reject","onopen","onerror","err","close","msg","send","stringify","type","applyDiffs","syncId","splice","newClientBoardState","st","dfGrp","equals","triggerBoardStateUpdate","sendRequestMessage","window","getTestRemoteGameState","a","gs","WebSocket","connect","addBoardStateListener","bs","console","log","toJS","Square","createBoard","size","length","clearPencilMarks","board","setIn","removePencilMark","updateIn","marks","remove","Gamestate","boards","of","index","canUndo","gamestate","canRedo","Modes","Action","updateGamestate","mode","selection","settings","action","direction","updater","currentBoard","get","newBoard","merge","slice","updateBoard","getIn","affectedSquares","withMutations","setNumber","first","incompleteSquares","effectiveMode","i","some","hasIn","anyContains","add","addPencilMark","undo","redo","getErrors","rows","r","columns","c","boxes","b","base","concat","box","sections","errorSquares","asMutable","forEach","section","squareNumbers","v","numberCounts","countBy","asImmutable","squareIncludesDigit","includes","Board","children","handleTouchMove","boardAreaRef","errors","highlights","intersect","isError","isFocused","focusDigit","isLocked","isPeer","isSelected","hasCursor","usingCursor","cursor","Box","BoardTouchArea","ref","BoardGrid","onTouchMove","BoardSizer","styled","div","CORNER_GRID_AREA_SETS","1","2","3","4","5","6","7","8","9","Cursor","number_or_hints","Corners","Centers","lock","Lock","classes","StyledSquare","className","join","data-index","p","theme","brighten","squareHighlighted","squareSelected","squareError","error","squareSelectedError","StyledLock","background","icon","faLock","Number","StyledNumber","cornerNumbers","sort","cornerGridAreas","cornerEntries","area","charAt","StyledCorners","style","gridArea","StyledCenters","Selection","SelectionAction","updateSelection","neighbor","makeTheme","chroma","border","text","lch","button","darken","mix","squareLocked","Themes","t","red","orange","yellow","green","cyan","blue","indigo","purple","gray","default","ModeTheme","StyledButtonRow","ButtonRow","large","stretch","StyledButtonBase","StyledButtonLabel","StyledButton","props","desaturate","Button","active","enabled","onClick","as","disabled","StyledFocusSelector","FocusSelector","dispatchSelection","buttons","faSearch","StyledUndoRedo","UndoRedo","dispatchGamestate","faUndo","faRedo","StyledTopControls","TopControls","encodeBoard","INITIAL_SETTINGS","automaticallyRemoveMarks","highlightAffectedMarks","highlightPeers","showConflicts","showLocked","SettingAction","updateSettings","name","value","Settings","dispatchSettings","SettingsFlex","SettingsGroup","SettingsUl","Toggle","dispatch","fieldset","ul","SettingsListItem","id","checked","onChange","for","li","encoded","searchParams","URLSearchParams","location","search","initialBoard","has","char","parsed","parseInt","App","useReducer","initial_board","realDispatchGamestate","useState","setMode","useCallback","params","currentErrors","useMemo","selectSquareAtCoordinates","x","y","element","document","elementFromPoint","hasAttribute","parentElement","getAttribute","squareAt","inputDigit","selectTouchedSquares","e","changedTouches","touch","clientX","clientY","handleTouchStart","preventDefault","touches","ctrlKey","handleMouseDown","shiftKey","pageX","pageY","handleMouseMove","moveCursor","key","substring","toLowerCase","handleKeyDown","useEffect","addEventListener","removeEventListener","boardArea","useRef","node","current","GlobalStyle","faBackspace","boardstr","url","URL","href","toString","navigator","clipboard","writeText","copyBoardAsURL","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60cab048.chunk.js","sourcesContent":["import * as immutable from \"immutable\";\n\nexport function squareAt(x, y) {\n  let element = document.elementFromPoint(x, y);\n  while (element !== null) {\n    if (element.hasAttribute(\"data-index\")) break;\n    element = element.parentElement;\n  }\n  if (element != null) {\n    let i = parseInt(element.getAttribute(\"data-index\"));\n    return i;\n  }\n  return null;\n}\n\nexport function neighbor(s, direction) {\n  switch (direction) {\n    case \"left\":\n      return s % 9 > 0 ? s - 1 : null;\n    case \"down\":\n      return Math.floor(s / 9) < 8 ? s + 9 : null;\n    case \"up\":\n      return Math.floor(s / 9) > 0 ? s - 9 : null;\n    case \"right\":\n      return s % 9 < 8 ? s + 1 : null;\n    default:\n      console.log(\n        `neighbor was called with an invalid direction: ${direction}`\n      );\n      return null;\n  }\n}\n\nexport function indexbox(ibox, isquare) {\n  const boxrow = Math.floor(ibox / 3);\n  const boxcol = ibox % 3;\n  const actualrow = boxrow * 3 + Math.floor(isquare / 3);\n  const actualcol = boxcol * 3 + (isquare % 3);\n  return actualrow * 9 + actualcol;\n}\n\nexport function row(n) {\n  return immutable.Range(9 * n, 9 * n + 9);\n}\n\nexport function col(n) {\n  return immutable.Range(n, 81, 9);\n}\n\nexport function box(n) {\n  const boxrow = Math.floor(n / 3);\n  const boxcol = n % 3;\n  const base = 27 * boxrow + 3 * boxcol;\n  return immutable\n    .Range(base, base + 3)\n    .concat(\n      immutable.Range(base + 9, base + 9 + 3),\n      immutable.Range(base + 18, base + 18 + 3)\n    );\n}\n\nexport function rowOf(s) {\n  const row = Math.floor(s / 9);\n  return immutable.Set(immutable.Range(9 * row, 9 * row + 9));\n}\n\nexport function colOf(s) {\n  const col = s % 9;\n  return immutable.Set(immutable.Range(col, 81, 9));\n}\n\nexport function boxOf(s) {\n  const boxrow = Math.floor(Math.floor(s / 9) / 3);\n  const boxcol = Math.floor((s % 9) / 3);\n  return immutable.Set(\n    immutable\n      .Range(3 * boxrow, 3 * (boxrow + 1))\n      .flatMap((row) =>\n        immutable.Range(9 * row + 3 * boxcol, 9 * row + 3 * (boxcol + 1))\n      )\n  );\n}\n\nexport function affectedBy(s) {\n  return immutable.Set.union([rowOf(s), colOf(s), boxOf(s)]);\n}\n\nexport function rows() {\n  return immutable.Range(0, 81, 9).map((s) => row(s));\n}\n\nexport function cols() {\n  return immutable.Range(0, 9).map((s) => col(s));\n}\n\nexport function boxes() {\n  return immutable.Range(0, 2);\n}\n","import * as Immutable from \"immutable\";\n\ntype ServerBoardSquare = {\n  number: number | null;\n  corners: number[];\n  centers: number[];\n  locked: boolean;\n};\n\ntype ServerBoardState = {\n  squares: ServerBoardSquare[];\n};\n\ntype ValueOf<T> = T[keyof T];\nenum BoardPencilType {\n  Center = \"center\",\n  Corner = \"corner\",\n}\n\ntype SetNumberOperation = {\n  fn: \"setNumber\";\n  digit: number | null;\n};\ntype AddPencilMarkOperation = {\n  fn: \"addPencilMark\";\n  type: ValueOf<typeof BoardPencilType>;\n  digit: number;\n};\ntype RemovePencilMarkOperation = {\n  fn: \"removePencilMark\";\n  type: ValueOf<typeof BoardPencilType>;\n  digit: number;\n};\ntype ClearPencilMarksOperation = {\n  fn: \"clearPencilMarks\";\n};\ntype BoardDiffOperation =\n  | SetNumberOperation\n  | AddPencilMarkOperation\n  | RemovePencilMarkOperation\n  | ClearPencilMarksOperation;\n\ntype BoardDiff = {\n  squares: number[];\n  operation: BoardDiffOperation;\n};\n\ntype SetBoardStateRequestMessage = {\n  type: \"setBoardState\";\n  boardState: ServerBoardState;\n};\ntype ApplyDiffsRequestMessage = {\n  type: \"applyDiffs\";\n  syncId: number;\n  diffs: BoardDiff[];\n};\ntype RequestMessage = SetBoardStateRequestMessage | ApplyDiffsRequestMessage;\n\ntype InitResponseMessage = {\n  type: \"init\";\n  boardId: string;\n  boardState: ServerBoardState;\n};\ntype PartialUpdateResponseMessage = {\n  type: \"partialUpdate\";\n  syncId: number;\n  diffs: BoardDiff[];\n};\ntype ResponseMessage = InitResponseMessage | PartialUpdateResponseMessage;\n\nexport class RealtimeApi {\n  private responseMessageListeners: ((message: ResponseMessage) => void)[];\n\n  constructor(private ws: WebSocket) {\n    this.responseMessageListeners = [];\n    ws.onmessage = this.onMessage;\n  }\n\n  static init(url: string): Promise<RealtimeApi> {\n    const ws = new WebSocket(url);\n    const rt = new RealtimeApi(ws);\n    return new Promise((resolve, reject) => {\n      ws.onopen = () => resolve(rt);\n      ws.onerror = reject;\n    });\n  }\n\n  private onMessage = (rawMessage: MessageEvent) => {\n    let message = JSON.parse(rawMessage.data);\n    for (const listener of this.responseMessageListeners) {\n      listener(message);\n    }\n  };\n\n  addResponseMessageListener(listener: (message: ResponseMessage) => void) {\n    this.responseMessageListeners.push(listener);\n  }\n\n  removeResponseMessageListener(listener: (message: ResponseMessage) => void) {\n    this.responseMessageListeners = this.responseMessageListeners.filter(\n      (l) => l !== listener\n    );\n  }\n}\n\n// same as ServerBoardSquare, but with Immutable\ntype LocalBoardSquareProps = {\n  number: number | null;\n  corners: Immutable.Set<number>;\n  centers: Immutable.Set<number>;\n  locked: boolean;\n};\n\nconst localBoardSquareDefaultValues: LocalBoardSquareProps = {\n  number: null,\n  corners: Immutable.Set(),\n  centers: Immutable.Set(),\n  locked: false,\n};\n\nconst createLocalBoardSquare: Immutable.Record.Factory<LocalBoardSquareProps> = Immutable.Record(\n  localBoardSquareDefaultValues\n);\n\ntype LocalBoardSquare = Immutable.Record<LocalBoardSquareProps>;\n\nfunction applyDiffOperationToSquare(\n  square: LocalBoardSquare,\n  operation: BoardDiffOperation\n): LocalBoardSquare {\n  switch (operation.fn) {\n    case \"setNumber\":\n      return square.set(\"number\", operation.digit);\n    // TODO: Implement other operations\n    default:\n      throw new Error(\n        `Tried call applyDiffs with invalid operation type: ${operation.fn}`\n      );\n  }\n}\n\nclass LocalBoardState {\n  constructor(public readonly squares: Immutable.List<LocalBoardSquare>) {}\n\n  static empty() {\n    return LocalBoardState.withNumbers(Immutable.Repeat(null, 81));\n  }\n\n  static withNumbers(numbers: Iterable<number | null>) {\n    return new LocalBoardState(\n      Immutable.Seq(numbers)\n        .map((number) =>\n          createLocalBoardSquare({\n            number: number,\n            locked: number !== null,\n          })\n        )\n        .toList()\n    );\n  }\n\n  private createMemo(\n    squares: Immutable.List<LocalBoardSquare>\n  ): LocalBoardState {\n    return this.squares === squares ? this : new LocalBoardState(squares);\n  }\n\n  applyDiffs(diffs: BoardDiff[]): LocalBoardState {\n    return this.createMemo(\n      diffs.reduce(\n        (squares, d) =>\n          d.squares.reduce(\n            (boardSquares, diffSquareIdx) =>\n              boardSquares.update(diffSquareIdx, (boardSquare) =>\n                applyDiffOperationToSquare(boardSquare, d.operation)\n              ),\n            this.squares\n          ),\n        this.squares\n      )\n    );\n  }\n}\n\nabstract class BaseGameState {\n  private boardStateListeners: ((boardState: LocalBoardState) => void)[] = [];\n\n  protected triggerBoardStateUpdate(boardState: LocalBoardState) {\n    for (const listener of this.boardStateListeners) {\n      listener(boardState);\n    }\n  }\n\n  // the listener will be called whenever the board state updates\n  addBoardStateListener(listener: (boardState: LocalBoardState) => void) {\n    this.boardStateListeners.push(listener);\n  }\n\n  removeBoardStateListener(listener: (boardState: LocalBoardState) => void) {\n    this.boardStateListeners = this.boardStateListeners.filter(\n      (l) => l !== listener\n    );\n  }\n\n  abstract applyDiffs(diffs: BoardDiff[]): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass LocalGameState extends BaseGameState {\n  private boardStateStack: LocalBoardState[] = [];\n\n  applyDiffs(diffs: BoardDiff[]): void {\n    const prevBoardState = this.boardStateStack[\n      this.boardStateStack.length - 1\n    ];\n    const newBoardState = prevBoardState.applyDiffs(diffs);\n    if (newBoardState !== prevBoardState) {\n      this.boardStateStack.push(newBoardState);\n      this.triggerBoardStateUpdate(newBoardState);\n    }\n  }\n}\n\nclass RemoteGameState extends BaseGameState {\n  // what the server has confirmed\n  private serverBoardState: LocalBoardState | null = null;\n  // what the UI should currently show\n  private clientBoardState: LocalBoardState = LocalBoardState.empty();\n  // the diffs that make up the difference between the server's board state and\n  // the client's\n  private unconfirmedDiffGroups: BoardDiff[][] = [];\n  // sync IDs are used to figure out what diffs we can remove from the\n  // unconfirmedDiffGroups queue\n  private lastSentSyncId: number = 0;\n  private lastReceivedSyncId: number = 0;\n\n  constructor(private ws: WebSocket) {\n    super();\n  }\n\n  connect(): Promise<void> {\n    this.ws.onmessage = this.onMessage;\n    return new Promise((resolve, reject) => {\n      this.ws.onopen = () => resolve();\n      this.ws.onerror = (err) => reject(err);\n    });\n  }\n\n  close(): void {\n    this.ws.close();\n  }\n\n  private onMessage = (rawMessage: MessageEvent) => {\n    this.onResponseMessage(JSON.parse(rawMessage.data));\n  };\n\n  private sendRequestMessage(msg: RequestMessage) {\n    this.ws.send(JSON.stringify(msg));\n  }\n\n  private onResponseMessage(msg: ResponseMessage): void {\n    switch (msg.type) {\n      case \"init\":\n        // TODO: implement me\n        this.serverBoardState = LocalBoardState.empty();\n        break;\n      case \"partialUpdate\":\n        if (this.serverBoardState == null) {\n          throw new Error(\"got partialUpdate before init\");\n        }\n        this.serverBoardState = this.serverBoardState.applyDiffs(msg.diffs);\n\n        // use syncId to update unconfirmedDiffGroups\n        if (msg.syncId > this.lastReceivedSyncId) {\n          this.unconfirmedDiffGroups.splice(\n            0,\n            msg.syncId - this.lastReceivedSyncId\n          );\n        }\n        this.lastReceivedSyncId = msg.syncId;\n\n        // apply unconfirmedDiffGroups to serverBoardState to get the new\n        // clientBoardState\n        const newClientBoardState = this.unconfirmedDiffGroups.reduce(\n          (st, dfGrp) => st.applyDiffs(dfGrp),\n          this.serverBoardState\n        );\n        // this will often differ by identity, but we should only trigger an\n        // update when it differs by equality\n        if (\n          !newClientBoardState.squares.equals(this.clientBoardState.squares)\n        ) {\n          this.clientBoardState = newClientBoardState;\n          this.triggerBoardStateUpdate(newClientBoardState);\n        }\n        break;\n      default:\n        throw new Error(\n          `Received unsupported response message type from server: ${msg}`\n        );\n    }\n  }\n\n  applyDiffs(diffs: BoardDiff[]): void {\n    const newClientBoardState = this.clientBoardState.applyDiffs(diffs);\n    this.unconfirmedDiffGroups.push(diffs);\n    this.sendRequestMessage({\n      type: \"applyDiffs\",\n      syncId: ++this.lastSentSyncId,\n      diffs,\n    });\n    if (newClientBoardState !== this.clientBoardState) {\n      this.clientBoardState = newClientBoardState;\n      this.triggerBoardStateUpdate(newClientBoardState);\n    }\n  }\n}\n\n// @ts-ignore: stick this on window for testing\nwindow.RemoteGameState = RemoteGameState;\n// @ts-ignore\nwindow.getTestRemoteGameState = async () => {\n  const gs = new RemoteGameState(\n    new WebSocket(\"ws://127.0.0.1:9091/api/v1/realtime/\")\n  );\n  await gs.connect();\n  gs.addBoardStateListener((bs) => console.log(bs.squares.toJS()));\n  return gs;\n};\n","import * as immutable from \"immutable\";\n\nimport { affectedBy, box, col, row } from \"./Geometry.js\";\n// TOOD: this is dead code, we just want to load it into the page\n// eslint-disable-next-line no-unused-vars\nimport { RealtimeGamestate } from \"./Realtime.ts\";\n\nconst Square = immutable.Record({\n  number: null,\n  corners: immutable.Set(),\n  centers: immutable.Set(),\n  locked: false,\n});\n\nexport function createBoard(numbers) {\n  numbers = numbers ?? immutable.Repeat(null, 81);\n  if (numbers.size !== 81) {\n    throw new Error(`numbers had length ${numbers.length}; expected 81`);\n  }\n  return numbers\n    .map((number) =>\n      Square({\n        number: number,\n        corners: immutable.Set(),\n        centers: immutable.Set(),\n        locked: number !== null,\n      })\n    )\n    .toList();\n}\n\nexport function anyContains(board, squares, type, digit) {\n  return squares\n    .map((i) => board.get(i))\n    .some((square) => square.hasIn([type, digit]));\n}\n\nexport function setNumber(settings, board, square, digit) {\n  if (board.getIn([square, \"locked\"])) {\n    return board;\n  }\n  const affectedSquares = affectedBy(square);\n  return board.withMutations((board) => {\n    board.setIn([square, \"number\"], digit);\n    clearPencilMarks(board, immutable.List.of(square), \"corners\");\n    clearPencilMarks(board, immutable.List.of(square), \"centers\");\n    if (settings.get(\"automaticallyRemoveMarks\")) {\n      removePencilMark(board, affectedSquares, \"corners\", digit);\n      removePencilMark(board, affectedSquares, \"centers\", digit);\n    }\n  });\n}\n\nexport function addPencilMark(board, squares, type, digit) {\n  return squares.reduce(\n    (board, square) =>\n      board.updateIn([square, type], (marks) => marks.add(digit)),\n    board\n  );\n}\n\nexport function clearPencilMarks(board, squares, type) {\n  return squares.reduce(\n    (board, square) => board.setIn([square, type], immutable.Set()),\n    board\n  );\n}\n\nexport function removePencilMark(board, squares, type, digit) {\n  return squares.reduce(\n    (board, square) =>\n      board.updateIn([square, type], (marks) => marks.remove(digit)),\n    board\n  );\n}\n\nconst Gamestate = immutable.Record({\n  boards: immutable.List.of(createBoard(null)),\n  index: 0,\n});\n\nexport function createGamestate(initial_board) {\n  return Gamestate({ boards: immutable.List.of(initial_board) });\n}\n\nexport function updateBoard(gamestate, updater) {\n  const currentBoard = gamestate.boards.get(gamestate.index);\n  const newBoard = updater(currentBoard);\n  if (immutable.is(newBoard, currentBoard)) {\n    return gamestate;\n  }\n  return gamestate.merge({\n    boards: gamestate.boards.slice(0, gamestate.index + 1).push(newBoard),\n    index: gamestate.index + 1,\n  });\n}\n\nfunction undo(gamestate, settings) {\n  return canUndo(gamestate)\n    ? gamestate.update(\"index\", (i) => i - 1)\n    : gamestate;\n}\n\nfunction redo(gamestate) {\n  return canRedo(gamestate)\n    ? gamestate.update(\"index\", (i) => i + 1)\n    : gamestate;\n}\n\nexport function canUndo(gamestate) {\n  return gamestate.index > 0;\n}\n\nexport function canRedo(gamestate) {\n  return gamestate.index < gamestate.boards.size - 1;\n}\n\nexport const Modes = {\n  normal: \"normal\",\n  corners: \"corners\",\n  centers: \"centers\",\n};\n\nexport const Action = {\n  input: \"input\",\n  undo: \"undo\",\n  redo: \"redo\",\n  clearSelection: \"clearSelection\",\n  selectSquares: \"selectSquares\",\n  deselectSquares: \"deselectSquares\",\n  selectDirection: \"selectDirection\",\n};\n\nexport function updateGamestate(\n  gamestate,\n  { mode, selection, settings, action, squares, digit, direction }\n) {\n  switch (action) {\n    case Action.input:\n      return updateBoard(gamestate, (board) => {\n        if (\n          (mode === Modes.normal && selection.squares.size === 1) ||\n          (mode === Modes.normal && digit === null)\n        ) {\n          return setNumber(settings, board, selection.squares.first(), digit);\n        } else if (\n          mode === Modes.normal ||\n          mode === Modes.corners ||\n          mode === Modes.centers\n        ) {\n          const incompleteSquares = selection.squares.filter(\n            (s) => board.get(s).number === null\n          );\n          const effectiveMode = mode === Modes.normal ? Modes.corners : mode;\n          if (digit === null) {\n            return clearPencilMarks(board, incompleteSquares, effectiveMode);\n          } else if (\n            anyContains(board, incompleteSquares, effectiveMode, digit)\n          ) {\n            return removePencilMark(\n              board,\n              incompleteSquares,\n              effectiveMode,\n              digit\n            );\n          } else {\n            return addPencilMark(\n              board,\n              incompleteSquares,\n              effectiveMode,\n              digit\n            );\n          }\n        } else {\n          throw new Error(`Invalid mode: ${mode}`);\n        }\n      });\n    case Action.undo:\n      return undo(gamestate, settings);\n    case Action.redo:\n      return redo(gamestate);\n    default:\n      throw new Error(`Invalid action: ${action}`);\n  }\n}\n\nexport function getErrors(board) {\n  const rows = immutable.Range(0, 9).map((r) => row(r));\n  const columns = immutable.Range(0, 9).map((c) => col(c));\n  const boxes = immutable.Range(0, 9).map((b) => box(b));\n  const sections = rows.concat(columns, boxes);\n  const errorSquares = immutable.Set().asMutable();\n  sections.forEach((section) => {\n    const squareNumbers = immutable\n      .Map(section.map((s) => [s, board.get(s).number]))\n      .filter((v) => v !== null);\n    const numberCounts = squareNumbers.countBy((number) => number);\n    squareNumbers.forEach((number, s) => {\n      if (numberCounts.get(number) > 1) {\n        errorSquares.add(s);\n      }\n    });\n  });\n  return errorSquares.asImmutable();\n}\n\nexport function squareIncludesDigit(square, digit) {\n  return digit === null\n    ? false\n    : square.number === digit ||\n        square.corners.includes(digit) ||\n        square.centers.includes(digit);\n}\n","import { faLock } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as immutable from \"immutable\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { squareIncludesDigit } from \"./Gamestate\";\nimport { affectedBy, indexbox } from \"./Geometry\";\n\nexport function Board({\n  children,\n  handleTouchMove,\n  boardAreaRef,\n  board,\n  errors,\n  selection,\n  settings,\n}) {\n  const highlights = settings.get(\"highlightPeers\")\n    ? immutable.Set.intersect(selection.squares.map(affectedBy))\n    : immutable.Set();\n\n  const boxes = [];\n  for (let ibox = 0; ibox < 9; ibox++) {\n    const squares = [];\n    for (let isquare = 0; isquare < 9; isquare++) {\n      const i = indexbox(ibox, isquare);\n      const square = board.get(i);\n      squares.push(\n        <Square\n          index={i}\n          isError={errors.includes(i)}\n          isFocused={squareIncludesDigit(square, selection.focusDigit)}\n          isLocked={square.get(\"locked\")}\n          isPeer={highlights.includes(i)}\n          isSelected={selection.squares.includes(i)}\n          hasCursor={selection.usingCursor && selection.cursor === i}\n          number={square.get(\"number\")}\n          corners={square.get(\"corners\")}\n          centers={square.get(\"centers\")}\n          settings={settings}\n        />\n      );\n    }\n    boxes.push(<Box>{squares}</Box>);\n  }\n\n  return (\n    <BoardTouchArea ref={boardAreaRef}>\n      <BoardGrid onTouchMove={handleTouchMove}>{boxes}</BoardGrid>\n    </BoardTouchArea>\n  );\n}\n\nexport const BoardSizer = styled.div`\n  --box-gap: 4px;\n  --square-gap: 2px;\n  --square-size: 4em;\n  --board-size: calc(\n    9 * var(--square-size) + 6 * var(--square-gap) + 2 * var(--box-gap)\n  );\n\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst BoardTouchArea = styled.div`\n  padding-top: 1rem;\n  touch-action: none;\n`;\n\nconst BoardGrid = styled.div`\n  width: var(--board-size);\n  height: var(--board-size);\n  margin: 0 auto;\n\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  column-gap: var(--box-gap);\n  row-gap: var(--box-gap);\n\n  touch-action: none;\n`;\n\nexport const Box = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  column-gap: var(--square-gap);\n  row-gap: var(--square-gap);\n\n  user-select: none;\n`;\n\nconst CORNER_GRID_AREA_SETS = {\n  1: \"a\",\n  2: \"ac\",\n  3: \"acg\",\n  4: \"acgi\",\n  5: \"abcgi\",\n  6: \"abcghi\",\n  7: \"abcdghi\",\n  8: \"abcdfghi\",\n  9: \"abcdefghi\",\n};\n\nexport default function Square({\n  centers,\n  corners,\n  isError,\n  isFocused,\n  isLocked,\n  isPeer,\n  isSelected,\n  hasCursor,\n  index,\n  number,\n  settings,\n}) {\n  let cursor = null;\n  if (hasCursor) {\n    cursor = <Cursor />;\n  }\n\n  let number_or_hints = [];\n  if (number !== null) {\n    number_or_hints.push(<Number>{number}</Number>);\n  } else {\n    if (corners !== null) {\n      number_or_hints.push(<Corners corners={corners} />);\n    }\n    if (centers !== null) {\n      number_or_hints.push(<Centers centers={centers} />);\n    }\n  }\n\n  let lock = null;\n  if (isLocked && settings.get(\"showLocked\")) {\n    lock = <Lock />;\n  }\n\n  const classes = [];\n  if (isSelected) classes.push(\"selected\");\n  if (isError) classes.push(\"error\");\n  if (isFocused) classes.push(\"focused\");\n  if (isPeer) classes.push(\"highlighted\");\n  return (\n    <StyledSquare className={`${classes.join(\" \")}`} data-index={index}>\n      {lock}\n      {cursor}\n      {number_or_hints}\n    </StyledSquare>\n  );\n}\n\nconst StyledSquare = styled.div`\n  background-color: ${(p) => p.theme.square};\n  position: relative;\n  transition: background-color 0.1s ease-out;\n  text-align: center;\n\n  & > * {\n    box-sizing: border-box;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n  }\n\n  &.focused {\n    background-color: ${(p) => p.theme.square.brighten(0.3)};\n  }\n  &.highlighted {\n    background-color: ${(p) => p.theme.squareHighlighted};\n    transition: none;\n  }\n  &.selected {\n    background-color: ${(p) => p.theme.squareSelected};\n    transition: none;\n  }\n  &.error {\n    background-color: ${(p) => p.theme.squareError};\n  }\n  &::after {\n    box-shadow: 0 0 8px ${(p) => p.theme.error};\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 5;\n    opacity: 0;\n    transition: opacity 0.1s ease-out;\n  }\n  &.error::after {\n    opacity: 1;\n  }\n  &.selected.error {\n    background-color: ${(p) => p.theme.squareSelectedError};\n  }\n\n  @keyframes fade-in {\n    0% {\n      opacity: 0;\n      transform: translateY(0.2em);\n    }\n    100% {\n      opacity: 1;\n      transform: none;\n    }\n  }\n\n  .centers,\n  .corners {\n  }\n\n  .centers {\n  }\n\n  .corners {\n  }\n`;\n\nconst Cursor = styled.div`\n  border: solid 1px ${(p) => p.theme.base.brighten(0.2)};\n`;\n\nconst StyledLock = styled.div`\n  color: ${(p) => p.theme.background};\n  padding: 0.2em;\n\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n`;\nfunction Lock() {\n  return (\n    <StyledLock>\n      <FontAwesomeIcon icon={faLock} />\n    </StyledLock>\n  );\n}\n\nfunction Number({ children }) {\n  return (\n    <StyledNumber>\n      <span>{children}</span>\n    </StyledNumber>\n  );\n}\n\nconst StyledNumber = styled.div`\n  animation: fade-in 0.1s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: var(--font-serif);\n  font-size: calc(var(--square-size) * 0.6);\n  font-weight: 500;\n`;\n\nfunction Corners({ corners }) {\n  const cornerNumbers = [...corners].sort();\n  const cornerGridAreas = CORNER_GRID_AREA_SETS[cornerNumbers.length];\n  const cornerEntries = [];\n  for (let i = 0; i < cornerNumbers.length; i++) {\n    cornerEntries.push({\n      n: cornerNumbers[i],\n      area: cornerGridAreas.charAt(i),\n    });\n  }\n  return (\n    <StyledCorners>\n      {cornerEntries.map(({ n, area }) => (\n        <span style={{ gridArea: area }}>{n}</span>\n      ))}\n    </StyledCorners>\n  );\n}\n\nconst StyledCorners = styled.div`\n  font-family: var(--font-sans);\n  font-size: 1em;\n  font-weight: 500;\n  align-content: space-between;\n  display: grid;\n  grid-template-areas: \"a b c\" \"d e f\" \"g h i\";\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  line-height: calc(var(--square-size) / 3);\n`;\n\nfunction Centers({ centers }) {\n  return (\n    <StyledCenters>\n      {[...centers].sort().map((n) => (\n        <span>{n}</span>\n      ))}\n    </StyledCenters>\n  );\n}\n\nconst StyledCenters = styled.div`\n  font-family: var(--font-sans);\n  font-size: 1em;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import * as immutable from \"immutable\";\n\nimport { neighbor } from \"./Geometry\";\n\nexport const Selection = immutable.Record({\n  cursor: null,\n  focusDigit: null,\n  squares: immutable.Set(),\n  usingCursor: false,\n});\n\nexport const SelectionAction = {\n  clear: \"clear\",\n  addSquare: \"addSquare\",\n  removeSquare: \"removeSquare\",\n  addDirection: \"addDirection\",\n  focus: \"focus\",\n};\n\nexport function updateSelection(\n  selection,\n  { action, square, direction, digit }\n) {\n  switch (action) {\n    case SelectionAction.clear:\n      return selection.set(\"squares\", immutable.Set());\n    case SelectionAction.addSquare:\n      return selection.merge({\n        cursor: square,\n        squares: selection.squares.add(square),\n        usingCursor: false,\n      });\n    case SelectionAction.removeSquare:\n      return selection.merge({\n        cursor: square,\n        squares: selection.squares.remove(square),\n      });\n    case SelectionAction.addDirection:\n      let i = neighbor(selection.cursor, direction) ?? selection.cursor;\n      return selection.merge({\n        squares: selection.squares.add(i),\n        cursor: i,\n        usingCursor: true,\n      });\n    case SelectionAction.focus:\n      return selection.withMutations((selection) => {\n        selection.set(\"focusDigit\", digit);\n        if (digit !== null) {\n          selection.set(\"squares\", immutable.Set());\n        }\n      });\n    default:\n      throw new Error(`Invalid action: ${action}`);\n  }\n}\n","import chroma from \"chroma-js\";\n\nimport { Modes } from \"./Gamestate.js\";\n\nfunction makeTheme(base) {\n  const theme = { base: base };\n\n  theme.background = chroma(\"#232729\");\n  theme.border = chroma(\"#606060\");\n  theme.text = chroma(\"#d1d2d0\");\n  theme.error = chroma.lch(20, 50, 30);\n\n  theme.button = theme.base.darken(0.8);\n\n  theme.square = chroma.lch(22, 3, 252);\n  theme.squareSelected = chroma.mix(theme.square, theme.base, 0.7, \"lab\");\n  theme.squareHighlighted = chroma.mix(theme.square, theme.base, 0.2, \"lab\");\n  theme.squareError = chroma.mix(theme.square, theme.error, 0.5, \"lab\");\n  theme.squareLocked = theme.square.darken(0.2);\n  theme.squareSelectedError = chroma.mix(\n    theme.squareSelected,\n    theme.squareError,\n    0.5,\n    \"lab\"\n  );\n\n  return theme;\n}\n\nexport const Themes = (() => {\n  const t = {\n    red: makeTheme(chroma.lch(45, 35, 0)),\n    orange: makeTheme(chroma.lch(45, 35, 45)),\n    yellow: makeTheme(chroma.lch(45, 35, 90)),\n    green: makeTheme(chroma.lch(45, 35, 135)),\n    cyan: makeTheme(chroma.lch(45, 35, 180)),\n    blue: makeTheme(chroma.lch(45, 35, 225)),\n    indigo: makeTheme(chroma.lch(45, 35, 270)),\n    purple: makeTheme(chroma.lch(45, 35, 315)),\n    gray: makeTheme(chroma.lch(45, 0, 0)),\n  };\n  t.default = t.gray;\n  return t;\n})();\n\nexport const ModeTheme = {\n  [Modes.normal]: Themes.green,\n  [Modes.corners]: Themes.cyan,\n  [Modes.centers]: Themes.blue,\n};\n","import { faRedo, faSearch, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as immutable from \"immutable\";\nimport React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport { Action } from \"./Gamestate\";\nimport { SelectionAction } from \"./Selection\";\nimport { Themes } from \"./Theme\";\n\nexport const StyledButtonRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > * {\n    flex: 1 0 0;\n  }\n\n  &.stretch > * {\n    flex: 0 1 100%;\n  }\n\n  &.large {\n    font-size: 2em;\n  }\n\n  & > :not(:last-child) {\n    border-right-width: 0;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  & > :not(:first-child) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n\nexport function ButtonRow({ children, large, stretch }) {\n  const classes = [];\n  if (large) classes.push(\"large\");\n  if (stretch) classes.push(\"stretch\");\n  return (\n    <StyledButtonRow className={classes.join(\" \")}>{children}</StyledButtonRow>\n  );\n}\n\nconst StyledButtonBase = styled.div`\n  background: ${(p) => p.theme.button.set(\"lch.c\", 0)};\n  border: solid 1px black;\n  border-radius: var(--border-radius);\n  box-shadow: inset 0 1px 0 0 ${(p) => p.theme.button.brighten(0.3)};\n  color: inherit;\n  font-size: 1.5em;\n  line-height: 1.8;\n  padding: 0 0.4em;\n  text-shadow: 1px 1px 0px black;\n  touch-action: none;\n`;\n\nconst StyledButtonLabel = styled(StyledButtonBase)`\n  color: ${(p) => p.theme.background};\n  flex: 0 1 0;\n`;\n\nconst StyledButton = styled(StyledButtonBase)`\n  background: linear-gradient(\n    to bottom,\n    ${(p) => p.theme.button} 30%,\n    ${(p) => p.theme.button.darken(0.2)} 100%\n  );\n  &:hover {\n    background: linear-gradient(\n      to bottom,\n      ${(p) => p.theme.button.brighten(0.2)} 20%,\n      ${(p) => p.theme.button} 100%\n    );\n  }\n  &:active,\n  &.active {\n    background: linear-gradient(\n      to bottom,\n      ${(p) => p.theme.button.darken(0.3)} 20%,\n      ${(p) => p.theme.button.darken(0.15)} 100%\n    );\n    box-shadow: inset 0 0 1px 0 ${(p) => p.theme.button.brighten(1.5)};\n  }\n  &:disabled {\n    background: ${(props) => props.theme.button.desaturate(1)};\n    box-shadow: none;\n    color: gray;\n  }\n\n  & > svg {\n    filter: drop-shadow(1px 1px 0 black);\n  }\n`;\n\nexport function Button({\n  children,\n  className,\n  active,\n  enabled,\n  large,\n  onClick,\n}) {\n  return (\n    <StyledButton\n      as=\"button\"\n      className={`button${active ? \" active\" : \"\"}${large ? \" large\" : \"\"}${\n        className ? ` ${className}` : \"\"\n      }`}\n      disabled={enabled === false}\n      onClick={onClick}\n    >\n      {children}\n    </StyledButton>\n  );\n}\n\nconst StyledFocusSelector = styled.div`\n  width: 30em;\n`;\n\nfunction FocusSelector({ selection, dispatchSelection }) {\n  const buttons = immutable.Range(1, 10).map((i) => (\n    <Button\n      active={selection.focusDigit === i}\n      onClick={() =>\n        dispatchSelection({\n          action: SelectionAction.focus,\n          digit: selection.focusDigit === i ? null : i,\n        })\n      }\n    >\n      {i}\n    </Button>\n  ));\n  return (\n    <StyledFocusSelector>\n      <ButtonRow>\n        <StyledButtonLabel>\n          <FontAwesomeIcon icon={faSearch} size=\"sm\" />\n        </StyledButtonLabel>\n        {buttons}\n      </ButtonRow>\n    </StyledFocusSelector>\n  );\n}\n\nconst StyledUndoRedo = styled.div`\n  width: 6em;\n`;\n\nexport function UndoRedo({ dispatchGamestate, canUndo, canRedo }) {\n  return (\n    <StyledUndoRedo>\n      <ButtonRow>\n        <Button\n          onClick={() => dispatchGamestate({ action: Action.undo })}\n          enabled={canUndo}\n        >\n          <FontAwesomeIcon icon={faUndo} size=\"sm\" />\n        </Button>\n        <Button\n          onClick={() => dispatchGamestate({ action: Action.redo })}\n          enabled={canRedo}\n        >\n          <FontAwesomeIcon icon={faRedo} size=\"sm\" />\n        </Button>\n      </ButtonRow>\n    </StyledUndoRedo>\n  );\n}\n\nconst StyledTopControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: var(--board-size);\n  margin: 0 auto;\n`;\n\nexport function TopControls({\n  canRedo,\n  canUndo,\n  dispatchGamestate,\n  selection,\n  dispatchSelection,\n}) {\n  return (\n    <StyledTopControls>\n      <ThemeProvider theme={Themes.gray}>\n        <FocusSelector\n          selection={selection}\n          dispatchSelection={dispatchSelection}\n        />\n      </ThemeProvider>\n      <ThemeProvider theme={Themes.red}>\n        <UndoRedo\n          dispatchGamestate={dispatchGamestate}\n          canUndo={canUndo}\n          canRedo={canRedo}\n        />\n      </ThemeProvider>\n    </StyledTopControls>\n  );\n}\n","import * as immutable from \"immutable\";\n\nimport { createBoard } from \"./Gamestate.js\";\n\nexport function decodeBoard(encoded) {\n  const numbers = immutable.List(encoded).map((char) => {\n    const parsed = parseInt(char);\n    return parsed > 0 && parsed < 10 ? parsed : null;\n  });\n  return createBoard(numbers);\n}\n\nexport function encodeBoard(board) {\n  return board.map((square) => square.get(\"number\") ?? \".\").join(\"\");\n}\n\nexport function copyBoardAsURL(board) {\n  const boardstr = encodeBoard(board);\n  const url = new URL(window.location.href);\n  const params = url.searchParams;\n  params.set(\"board\", boardstr);\n  url.search = params.toString();\n  navigator.clipboard.writeText(url.href);\n}\n","import * as immutable from \"immutable\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport const INITIAL_SETTINGS = immutable.Map({\n  automaticallyRemoveMarks: false,\n  highlightAffectedMarks: true,\n  highlightPeers: true,\n  showConflicts: true,\n  showLocked: false,\n});\n\nconst SettingAction = {\n  toggle: \"toggle\",\n};\n\nexport function updateSettings(settings, { action, name }) {\n  switch (action) {\n    case SettingAction.toggle:\n      return settings.update(name, (value) => !value);\n    default:\n      throw new Error(`Invalid action: ${action}`);\n  }\n}\n\nexport function Settings({ settings, dispatchSettings }) {\n  return (\n    <SettingsFlex>\n      <SettingsGroup>\n        <legend>Display</legend>\n        <SettingsUl>\n          <Toggle\n            name=\"showConflicts\"\n            settings={settings}\n            dispatch={dispatchSettings}\n          >\n            Show conflicts\n          </Toggle>\n          <Toggle\n            name=\"showLocked\"\n            settings={settings}\n            dispatch={dispatchSettings}\n          >\n            Show locked squares\n          </Toggle>\n        </SettingsUl>\n      </SettingsGroup>\n      <SettingsGroup>\n        <legend>Pencil Marks</legend>\n        <SettingsUl>\n          <Toggle\n            name=\"automaticallyRemoveMarks\"\n            settings={settings}\n            dispatch={dispatchSettings}\n          >\n            Automatically remove marks\n          </Toggle>\n          <Toggle\n            name=\"highlightAffectedMarks\"\n            settings={settings}\n            dispatch={dispatchSettings}\n          >\n            Highlight affected marks (doesn't work yet)\n          </Toggle>\n        </SettingsUl>\n      </SettingsGroup>\n      <SettingsGroup>\n        <legend>Selection</legend>\n        <SettingsUl>\n          <Toggle\n            name=\"highlightPeers\"\n            settings={settings}\n            dispatch={dispatchSettings}\n          >\n            Highlight peers\n          </Toggle>\n        </SettingsUl>\n      </SettingsGroup>\n    </SettingsFlex>\n  );\n}\n\nconst SettingsFlex = styled.div`\n  display: flex;\n`;\n\nconst SettingsGroup = styled.fieldset`\n  border: 1px solid ${(p) => p.theme.border};\n  padding: 0 0.75rem;\n`;\n\nconst SettingsUl = styled.ul`\n  line-height: 1.5;\n  list-style: none;\n  padding: 0;\n`;\n\nfunction Toggle({ children, name, settings, dispatch }) {\n  return (\n    <SettingsListItem>\n      <input\n        type=\"checkbox\"\n        id={`setting-${name}`}\n        checked={settings.get(name)}\n        onChange={() => dispatch({ action: SettingAction.toggle, name: name })}\n      />\n      <label for={`setting-${name}`}>{children}</label>\n    </SettingsListItem>\n  );\n}\n\nconst SettingsListItem = styled.li`\n  & > label {\n    padding-left: 0.5em;\n  }\n`;\n","import \"normalize.css\";\n\nimport { faBackspace } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as immutable from \"immutable\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { Board, BoardSizer } from \"./Board\";\nimport { Button, ButtonRow, TopControls } from \"./Buttons\";\nimport {\n  Action,\n  canRedo,\n  canUndo,\n  createBoard,\n  createGamestate,\n  getErrors,\n  Modes,\n  updateGamestate,\n} from \"./Gamestate\";\nimport { squareAt } from \"./Geometry\";\nimport { copyBoardAsURL, decodeBoard, encodeBoard } from \"./Loader\";\nimport { Selection, SelectionAction, updateSelection } from \"./Selection\";\nimport { INITIAL_SETTINGS, Settings, updateSettings } from \"./Settings\";\nimport { ModeTheme, Themes } from \"./Theme\";\n\nconst searchParams = new URLSearchParams(window.location.search);\nconst initialBoard = searchParams.has(\"board\")\n  ? decodeBoard(searchParams.get(\"board\"))\n  : createBoard(null);\n\nexport default function App() {\n  const [gamestate, realDispatchGamestate] = useReducer(\n    updateGamestate,\n    null,\n    () => createGamestate(initialBoard)\n  );\n  const [mode, setMode] = useState(Modes.normal);\n  const [selection, dispatchSelection] = useReducer(\n    updateSelection,\n    Selection()\n  );\n  const [settings, dispatchSettings] = useReducer(\n    updateSettings,\n    INITIAL_SETTINGS\n  );\n\n  const dispatchGamestate = useCallback(\n    (params) =>\n      realDispatchGamestate({\n        mode: mode,\n        selection: selection,\n        settings: settings,\n        ...params,\n      }),\n    [mode, selection, settings]\n  );\n\n  //\n  // STATE\n  //\n  const currentBoard = gamestate.boards.get(gamestate.index);\n  const currentErrors = useMemo(\n    () =>\n      settings.get(\"showConflicts\") ? getErrors(currentBoard) : immutable.Set(),\n    [currentBoard, settings]\n  );\n\n  const selectSquareAtCoordinates = useCallback((x, y) => {\n    const i = squareAt(x, y);\n    if (i !== null) {\n      dispatchSelection({\n        action: SelectionAction.addSquare,\n        square: i,\n      });\n    }\n  }, []);\n\n  //\n  // ACTIONS\n  //\n  const inputDigit = useCallback(\n    (digit) => {\n      dispatchGamestate({\n        action: Action.input,\n        digit: digit,\n        mode: mode,\n        settings: settings,\n      });\n    },\n    [dispatchGamestate, mode, settings]\n  );\n\n  //\n  // TOUCH\n  //\n  const selectTouchedSquares = useCallback(\n    (e) => {\n      for (let touch of e.changedTouches) {\n        selectSquareAtCoordinates(touch.clientX, touch.clientY);\n      }\n    },\n    [selectSquareAtCoordinates]\n  );\n\n  const handleTouchMove = useCallback(\n    (e) => {\n      selectTouchedSquares(e);\n    },\n    [selectTouchedSquares]\n  );\n\n  const handleTouchStart = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (e.touches.length === 1 && !e.ctrlKey) {\n        dispatchSelection({ action: SelectionAction.clear });\n      }\n      selectTouchedSquares(e);\n    },\n    [selectTouchedSquares]\n  );\n\n  //\n  // MOUSE\n  //\n  const handleMouseDown = useCallback(\n    (e) => {\n      if (!e.ctrlKey && !e.shiftKey) {\n        dispatchSelection({ action: SelectionAction.clear });\n      }\n      selectSquareAtCoordinates(e.pageX, e.pageY);\n    },\n    [selectSquareAtCoordinates]\n  );\n\n  const handleMouseMove = useCallback(\n    (e) => {\n      if (e.buttons === 1) {\n        selectSquareAtCoordinates(e.pageX, e.pageY);\n      }\n    },\n    [selectSquareAtCoordinates]\n  );\n\n  //\n  // KEYBOARD\n  //\n  const moveCursor = useCallback((e) => {\n    if (!e.shiftKey && !e.ctrlKey) {\n      dispatchSelection({ action: SelectionAction.clear });\n    }\n    dispatchSelection({\n      action: SelectionAction.addDirection,\n      direction: e.key.substring(5).toLowerCase(),\n    });\n  }, []);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      switch (e.key) {\n        case \"Escape\":\n          dispatchSelection({ action: SelectionAction.clear });\n          break;\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n        case \"ArrowUp\":\n        case \"ArrowDown\":\n          moveCursor(e);\n          break;\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\":\n          inputDigit(parseInt(e.key));\n          break;\n        case \"Backspace\":\n          inputDigit(null);\n          break;\n        case \"x\":\n          if (canRedo) {\n            dispatchGamestate({ action: Action.redo });\n          }\n          break;\n        case \"z\":\n          if (canUndo) {\n            dispatchGamestate({ action: Action.undo });\n          }\n          break;\n        default:\n          console.log(`Unhandled keydown: ${e}`);\n          return;\n      }\n      e.preventDefault();\n    },\n    [dispatchGamestate, inputDigit, moveCursor]\n  );\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  //\n  // RENDER\n  //\n  const boardArea = useRef(null);\n  useEffect(() => {\n    const node = boardArea.current;\n    node.addEventListener(\"mousedown\", handleMouseDown);\n    node.addEventListener(\"mousemove\", handleMouseMove);\n    node.addEventListener(\"touchmove\", handleTouchMove);\n    node.addEventListener(\"touchstart\", handleTouchStart);\n    return () => {\n      node.removeEventListener(\"mousedown\", handleMouseDown);\n      node.removeEventListener(\"mousemove\", handleMouseMove);\n      node.removeEventListener(\"touchmove\", handleTouchMove);\n      node.removeEventListener(\"touchstart\", handleTouchStart);\n    };\n  }, [handleMouseDown, handleMouseMove, handleTouchMove, handleTouchStart]);\n\n  return (\n    <ThemeProvider theme={Themes.default}>\n      <GlobalStyle />\n      <BoardSizer>\n        <TopControls\n          canRedo={canRedo(gamestate)}\n          canUndo={canUndo(gamestate)}\n          dispatchGamestate={dispatchGamestate}\n          selection={selection}\n          dispatchSelection={dispatchSelection}\n        />\n        <ThemeProvider theme={ModeTheme[mode]}>\n          <Board\n            boardAreaRef={boardArea}\n            handleTouchMove={handleTouchMove}\n            board={currentBoard}\n            errors={currentErrors}\n            selection={selection}\n            settings={settings}\n          />\n        </ThemeProvider>\n      </BoardSizer>\n      <div>\n        <ButtonRow stretch>\n          <ThemeProvider theme={ModeTheme[Modes.normal]}>\n            <Button\n              active={mode === Modes.normal}\n              onClick={() => setMode(Modes.normal)}\n              theme=\"normal\"\n            >\n              normal\n            </Button>\n          </ThemeProvider>\n          <ThemeProvider theme={ModeTheme[Modes.corners]}>\n            <Button\n              active={mode === Modes.corners}\n              onClick={() => setMode(Modes.corners)}\n              theme=\"corners\"\n            >\n              corner\n            </Button>\n          </ThemeProvider>\n          <ThemeProvider theme={ModeTheme[Modes.centers]}>\n            <Button\n              active={mode === Modes.centers}\n              onClick={() => setMode(Modes.centers)}\n              theme=\"centers\"\n            >\n              center\n            </Button>\n          </ThemeProvider>\n        </ButtonRow>\n        <ThemeProvider theme={ModeTheme[mode]}>\n          <ButtonRow large stretch>\n            <Button onClick={() => inputDigit(1)}>1</Button>\n            <Button onClick={() => inputDigit(2)}>2</Button>\n            <Button onClick={() => inputDigit(3)}>3</Button>\n            <Button onClick={() => inputDigit(4)}>4</Button>\n            <Button onClick={() => inputDigit(5)}>5</Button>\n            <Button onClick={() => inputDigit(6)}>6</Button>\n            <Button onClick={() => inputDigit(7)}>7</Button>\n            <Button onClick={() => inputDigit(8)}>8</Button>\n            <Button onClick={() => inputDigit(9)}>9</Button>\n            <Button onClick={() => inputDigit(null)}>\n              <FontAwesomeIcon icon={faBackspace} size=\"sm\" />\n            </Button>\n          </ButtonRow>\n        </ThemeProvider>\n      </div>\n      <Settings settings={settings} dispatchSettings={dispatchSettings} />\n      <p>\n        Current board: <tt>{encodeBoard(currentBoard)}</tt>\n      </p>\n      <Button onClick={() => copyBoardAsURL(currentBoard)}>\n        Copy current board URL\n      </Button>\n      <ol>\n        <li>\n          <a href=\"?\">Empty puzzle</a>\n        </li>\n        <li>\n          <a href=\"?board=7.4..6..9.8..1......3.2.45.........2.56...78.1.........25.3.1......4..6.9..5..3.7\">\n            #1\n          </a>\n        </li>\n        <li>\n          <a href=\"?board=....2.......738....5.4.6.7.1.......896.....41.8.6.1.2...25.71....9.8.7..3.......6\">\n            #2\n          </a>\n        </li>\n      </ol>\n    </ThemeProvider>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --border-radius: 10px;\n    --font-serif: \"Literata\", serif;\n    --font-sans: \"Inter\", sans-serif;\n    --font-hint: \"Inconsolata\", monospace;\n  }\n\n  body {\n    background-color: ${(p) => p.theme.background};\n    color: ${(p) => p.theme.text};\n    font-family: var(--font-sans);\n    line-height: 1;\n    margin: 0;\n  }\n\n  .title {\n    font-family: var(--font-serif);\n    margin-top: 0.5em;\n    text-align: center;\n  }\n\n  #root {\n    display: flex;\n    flex-direction: column;\n    margin-top: 1rem;\n  }\n\n  #root > * {\n    flex-grow: 1;\n    margin: 0 1rem;\n  }\n  #root > * + * {\n    margin-top: 1rem;\n  }\n\n  a {\n    color: inherit;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}